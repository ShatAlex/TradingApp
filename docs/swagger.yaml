basePath: /
definitions:
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  trade.BuySellTickerInput:
    properties:
      amount:
        type: integer
      ticker:
        type: string
    type: object
  trade.SignInUser:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  trade.Trade:
    properties:
      amount:
        type: integer
      id:
        type: integer
      price:
        type: number
      ticker:
        type: string
      type_id:
        type: integer
      user_id:
        type: integer
    type: object
  trade.TypeTrade:
    properties:
      id:
        type: integer
      trade_type:
        type: string
    type: object
  trade.UpdateTradeInput:
    properties:
      amount:
        type: integer
      price:
        type: number
      ticker:
        type: string
      type_id:
        type: integer
    type: object
  trade.User:
    properties:
      _:
        type: integer
      balance:
        type: integer
      is_superuser:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for Trading Application
  title: Trading App API
  version: "1.0"
paths:
  /api/v1/portfolio:
    get:
      consumes:
      - application/json
      description: get portfolio
      operationId: get-portfolio
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get portfolio
      tags:
      - Portfolio
  /api/v1/portfolio/buy:
    post:
      consumes:
      - application/json
      description: buy ticker
      operationId: buy-ticker
      parameters:
      - description: ticker fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/trade.BuySellTickerInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Buy ticker
      tags:
      - Portfolio
  /api/v1/portfolio/detail{ticker}:
    get:
      consumes:
      - application/json
      description: get specific ticker
      operationId: get-cpecific-tciker
      parameters:
      - description: Ticker NASDAQ
        in: path
        name: ticker
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get specific ticker
      tags:
      - Portfolio
  /api/v1/portfolio/income:
    get:
      consumes:
      - application/json
      description: get income
      operationId: get-income
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get income
      tags:
      - Portfolio
  /api/v1/portfolio/sell:
    post:
      consumes:
      - application/json
      description: sell ticker
      operationId: sell-ticker
      parameters:
      - description: ticker fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/trade.BuySellTickerInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Sell ticker
      tags:
      - Portfolio
  /api/v1/trades:
    get:
      consumes:
      - application/json
      description: get all trades
      operationId: get-trades
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get trades
      tags:
      - Trades
    post:
      consumes:
      - application/json
      description: create trade
      operationId: create-trade
      parameters:
      - description: trade fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/trade.Trade'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create trade
      tags:
      - Trades
  /api/v1/trades/{id}:
    delete:
      consumes:
      - application/json
      description: delete trade
      operationId: delete-trade
      parameters:
      - description: Trade ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete trade
      tags:
      - Trades
    get:
      consumes:
      - application/json
      description: get specific trade
      operationId: get-specific-trade
      parameters:
      - description: Trade ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get specific trade
      tags:
      - Trades
    put:
      consumes:
      - application/json
      description: update trade
      operationId: update-trade
      parameters:
      - description: trade fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/trade.Trade'
      - description: Trade ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update trade
      tags:
      - Trades
  /api/v1/types:
    get:
      consumes:
      - application/json
      description: getting the type
      operationId: get-type
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get types
      tags:
      - Types
    post:
      consumes:
      - application/json
      description: create type
      operationId: create-type
      parameters:
      - description: type fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/trade.TypeTrade'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create type
      tags:
      - Types
  /api/v1/types/{id}:
    delete:
      consumes:
      - application/json
      description: delete type
      operationId: delete-type
      parameters:
      - description: Type ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete type
      tags:
      - Types
    get:
      consumes:
      - application/json
      description: getting specific type
      operationId: get-specific-type
      parameters:
      - description: Type ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get specific type
      tags:
      - Types
    put:
      consumes:
      - application/json
      description: update the type
      operationId: update-type
      parameters:
      - description: Type ID
        in: path
        name: id
        required: true
        type: integer
      - description: type fildes
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/trade.UpdateTradeInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update type
      tags:
      - Types
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: endpoint for login
      operationId: sign-in
      parameters:
      - description: account fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/trade.SignInUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: endpoint for creating account
      operationId: sign-up
      parameters:
      - description: account fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/trade.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
